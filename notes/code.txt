original code
javascript
const timeEl = document.querySelector(".time");
const displayQuestionsEl = document.querySelector(".displayQuestions");
const startButtonEl = document.querySelector(".startButton");
const answerChoices = document.querySelector(".answerChoices");
const HighScoreButton = document.querySelector(".HighScoreButton");
const HighScoreList = document.querySelector(".HighScoreList");
const HighScoreSubmit = document.querySelector(".HighScoreSubmit");
const SubmitScore = document.querySelector(".SubmitScore");
const AnswerMatch = document.querySelector(".AnswerMatch");
const TimeLeft  = 60;
var scores;
const score = 0;
const Questions = [
    "Which one of these is a data type?",
    "Which one is a programing language?",
    "Which one of these can you store multiply values at once?",
];
const Answers = [
    ["Booleon","String","Number","All of the above"],
    ["Css","Html","Javascript","All of the above"],
    ["Var","function","flex box","Array"],
];
const CorrectAnswers = ["All of the above","All of the above","Array"];
const questions = {
    questions:Object.values(Questions),
    AnswerChoices:Object.values(Answers),
    AnswersCorrect:Object.values(CorrectAnswers),
};
var correctAnswer;

function startQuiz(){
  const randIndex = Math.floor(Math.random()* question.questions.length);
  RenderQuestions(question,randIndex);
}
function ToStartTimer(){
  
  const timer = setInterval(function(){
    secondsLeft--;
    timeEl.textContent = "Remaining Time:"+ secondsLeft;
    if(secondsLeft === 0) {
      clearInterval(timerInterval);
      endQuiz();
    }
  })
}
function RenderQuestions(questionObject, index) {
  const RenderedQuestions = questionObject.questions[index];
  const renderedAnswers = questionsObject.AnswerChoices[index];
  CorrectAnswer = questionObject.CorrectAnswers[index];
}
displayQuestionsEl.textContent = renderedQuestions;

if (renderedAnswers) {
  for(const i = 0; i < renderedAnswers.length; i++) {
    const ans = document.createElement("button");
    ans.classList.add("button");
    ans.textContent = renderedAnswers[i];
    answerChoices.appendChild(ans);
    questionObject.answerChoices.splice(index,1);
    questionObject.CorrectAnswers.splice(index,1);
    questionObject.questions.splice(index,1);
  }
}

function endQuiz() {
    timeEl.style.display = "none";
    displayQuestionsEl.textContent = "Final Score:"+ score;
    startButtonEl.disabled = false;
    startButtonEl.textContent = "Play Again";
    SubmitScore.style.display = "block";
    
    question.AnswerChoices = Answers;
    question.AnswersCorrect = CorrectAnswers
    question.questions = questions;
}




startButtonEl.addEventListener("click", function (event) {
    if (startButtonEl.textContent === "Play Again") {
        location.reload();
      }
        
        startButtonEl.disabled = true;
        timeEl.textContent = "remaining time:"+ secondsLeft;
        secondsLeft = 60;
        startTimer();
        startQuiz();
    });

answerChoices.addEventListener("click", function (event) {
    if (event.target.textContent === correctAnswer) {
      answerMatch.textContent = "Correct!";
      score++;
    } else {
      answerMatch.textContent = "Wrong!";
      secondsLeft -= 5;
    }});

    while (answerChoices.firstChild) {
        answerChoices.removeChild(answerChoices.firstChild);
      }
    
      if (question.questions[0]) {
        startQuiz();
      } else {
        endQuiz();
      };
    
      submitScoreEl.addEventListener("click", function (event) {
      event.preventDefault();
      submitScoreEl.disabled = true;
      localStorage.setItem(
        document.querySelector(".initials").value,
        JSON.stringify(score)
      );
    });


      highScoreButton.addEventListener("click", function (event) {
        event.preventDefault();
        while (highScoreList.firstChild) {
          highScoreList.removeChild(highScoreList.firstChild);
        }})
        var highScore;
        scores = { ...localStorage };

        for (const i = 0; i < Object.entries(scores).length; i++) {
            console.log("test");
            highScore = document.createElement("li");
            highScore.textContent =
              Object.entries(scores)[i][0] + ": " + Object.entries(scores)[i][1];
            highScoreList.appendChild(highScore);
          };





html


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jaysons Coding Quiz</title>
    <link rel="stylesheet" href="./styles.css">
</head>
<body>
    <header>
        <h1 class = "Title">Coding Quiz</h1>
        <h2 class = "Time"></h2>
        <ul>
            <button class = "start button">Start</button>
            <button class = "high scores button">High Scores</button>
        </ul>
    </header>
    <main>
        <div>
            <h2 class = "Questions"></h2>
            <ul class = "answer choices"></ul>
        </div>

        <form class = "score submit">
            <h2>High Scores</h2>
            <label>Initials</label><br />
            <input type = "text" class = "initials"><br />
            <input type = "submit" value = "Submit" class = "submit score" />
        </form>
    </main>
    <footer>
        <ul class = "answer match"></ul>
        <ul class = "High score list"></ul>
    </footer>
    <script src ="script.js"></script>
</body>
</html>
